
import com.alee.laf.WebLookAndFeel;
//import com.alee.laf.rootpane.WebRootPaneUI;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
//import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.UIManager;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.swing.JRViewer;
import net.sf.jasperreports.view.JasperViewer;
import net.sf.jcarrierpigeon.WindowPosition;
import net.sf.jtelegraph.Telegraph;
import net.sf.jtelegraph.TelegraphQueue;
import net.sf.jtelegraph.TelegraphType;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author yhel001
 */
public final class System_Admin_and_User_Login extends javax.swing.JFrame {

    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    JTextField jfield = new JTextField();
    JTextField sfield = new JTextField();

    public System_Admin_and_User_Login() {

        conn = (Connection) JavaMySqlConnection.ConnectDb();
        initComponents();
        setIcon();
        datetime();
        webTextField1_username.getInputMap().put(null, webTextField1_username.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        webClock1 = new com.alee.extended.time.WebClock();
        jXHyperlink1_registration = new org.jdesktop.swingx.JXHyperlink();
        jLabel3_ny_registered_sub = new javax.swing.JLabel();
        webTextField1_username = new com.alee.laf.text.WebTextField();
        webPasswordField1_password = new com.alee.laf.text.WebPasswordField();
        webCheckBox1 = new com.alee.laf.checkbox.WebCheckBox();
        jLabel1 = new javax.swing.JLabel();
        webButton_Login = new com.alee.laf.button.WebButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Automated Electronic Budget Slip and Funds Monitoring System of DOSCST v1.1");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        webClock1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/date_icon.png"))); // NOI18N
        webClock1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        getContentPane().add(webClock1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 320, 150, 20));

        jXHyperlink1_registration.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/not_yet_registered.png"))); // NOI18N
        jXHyperlink1_registration.setText("");
        jXHyperlink1_registration.setContentAreaFilled(false);
        jXHyperlink1_registration.setFocusPainted(false);
        jXHyperlink1_registration.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jXHyperlink1_registrationMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jXHyperlink1_registrationMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jXHyperlink1_registrationMouseExited(evt);
            }
        });
        jXHyperlink1_registration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXHyperlink1_registrationActionPerformed(evt);
            }
        });
        getContentPane().add(jXHyperlink1_registration, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 230, 50));

        jLabel3_ny_registered_sub.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/not_yet_registered_sub.png"))); // NOI18N
        jLabel3_ny_registered_sub.setEnabled(false);
        getContentPane().add(jLabel3_ny_registered_sub, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 231, 50));

        webTextField1_username.setToolTipText("Field for Username");
        webTextField1_username.setDropMode(javax.swing.DropMode.INSERT);
        webTextField1_username.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        webTextField1_username.setInputPrompt("Username");
        webTextField1_username.setInputPromptFont(new java.awt.Font("Bookman Old Style", 2, 14)); // NOI18N
        webTextField1_username.setName(""); // NOI18N
        webTextField1_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                webTextField1_usernameActionPerformed(evt);
            }
        });
        webTextField1_username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                webTextField1_usernameKeyReleased(evt);
            }
        });
        getContentPane().add(webTextField1_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 150, 30));

        webPasswordField1_password.setToolTipText("Field for Password");
        webPasswordField1_password.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        webPasswordField1_password.setInputPrompt("Password");
        webPasswordField1_password.setInputPromptFont(new java.awt.Font("Bookman Old Style", 2, 14)); // NOI18N
        webPasswordField1_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                webPasswordField1_passwordActionPerformed(evt);
            }
        });
        getContentPane().add(webPasswordField1_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, 150, 30));

        webCheckBox1.setText("Show password..");
        webCheckBox1.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        webCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                webCheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(webCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 260, -1, -1));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 230, 30));

        webButton_Login.setBackground(new java.awt.Color(51, 255, 204));
        webButton_Login.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/loginIcon.png"))); // NOI18N
        webButton_Login.setText("LOGIN");
        webButton_Login.setBorderPainted(true);
        webButton_Login.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        webButton_Login.setInheritsPopupMenu(true);
        webButton_Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                webButton_LoginActionPerformed(evt);
            }
        });
        getContentPane().add(webButton_Login, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 280, 90, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/New_Main.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 670, -1));

        jTextField1.setText("jTextField1");
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, -1, -1));

        jMenuBar2.setBackground(new java.awt.Color(255, 255, 153));
        jMenuBar2.setForeground(new java.awt.Color(102, 255, 204));

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/User-Administrator-Green-icon.png"))); // NOI18N
        jMenu3.setText("Admin");
        jMenu3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/exit(1).png"))); // NOI18N
        jMenuBar2.add(jMenu3);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/report.png"))); // NOI18N
        jMenu1.setText("Reports");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar2.add(jMenu1);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Document-Help-icon.png"))); // NOI18N
        jMenu2.setText("Help");
        jMenuBar2.add(jMenu2);

        jMenu4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/graduated.png"))); // NOI18N
        jMenu4.setText("Developers Page");
        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        setSize(new java.awt.Dimension(664, 409));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jXHyperlink1_registrationMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXHyperlink1_registrationMouseEntered
        jXHyperlink1_registration.setIcon(new javax.swing.ImageIcon(getClass().getResource("icons/not_yet_registered_sub.png")));
    }//GEN-LAST:event_jXHyperlink1_registrationMouseEntered

    private void jXHyperlink1_registrationMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXHyperlink1_registrationMouseExited
        jXHyperlink1_registration.setIcon(new javax.swing.ImageIcon(getClass().getResource("icons/not_yet_registered.png")));
    }//GEN-LAST:event_jXHyperlink1_registrationMouseExited

    private void jXHyperlink1_registrationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXHyperlink1_registrationMouseClicked
        // Choose_Registration cr = new Choose_Registration();
        // cr.setVisible(true);
        // evt.consume();
    }//GEN-LAST:event_jXHyperlink1_registrationMouseClicked

    private void jXHyperlink1_registrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXHyperlink1_registrationActionPerformed

        int ans = JOptionPane.showConfirmDialog(null, "Master key is only known by the Administrator \n Would you like to continue?", "System Message", JOptionPane.YES_NO_OPTION);
        if (ans == 0) {
            Master_Key_Frame mkf = new Master_Key_Frame();
            mkf.setVisible(true);
        } else {

        }
        // JOptionPane.showMessageDialog(null, "Master key is only known by the Administrator, and the one who only can change it...","System Message",JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_jXHyperlink1_registrationActionPerformed

    private void webTextField1_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_webTextField1_usernameActionPerformed
        webButton_Login.doClick();
        webPasswordField1_password.getRegisteredKeyStrokes();
    }//GEN-LAST:event_webTextField1_usernameActionPerformed

    private void webPasswordField1_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_webPasswordField1_passwordActionPerformed
        webButton_Login.doClick();
    }//GEN-LAST:event_webPasswordField1_passwordActionPerformed

    private void webCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_webCheckBox1ActionPerformed
        if (webCheckBox1.isSelected()) {
            webPasswordField1_password.setEchoChar((char) 0);
        } else {
            webPasswordField1_password.setEchoChar('*');
        }
    }//GEN-LAST:event_webCheckBox1ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked

        try {
            JasperDesign jasperDesign = JRXmlLoader.load("Users_Information.jrxml");
            //String sql = "select * from users_table";
            JRDesignQuery newQuery = new JRDesignQuery();
            //newQuery.setText(sql);
            jasperDesign.setQuery(newQuery);

            JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);

            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, null, conn);

            //JasperViewer jview = new JasperViewer(jasperPrint, false, null);
            //jview.setTitle("Report Viewer");
            //jview.setIconImage(new javax.swing.ImageIcon(getClass().getResource("tatelogo.png")).getImage());
            //jview.setSize(800, 600);
            //jview.setVisible(true);
            JasperViewer.viewReport(jasperPrint, false);
            System_Admin_and_User_Login saaul = new System_Admin_and_User_Login();
            saaul.getContentPane().add(new JRViewer(jasperPrint));
            saaul.pack();
            saaul.setVisible(true);

        } catch (Exception e) {

            // JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jMenu1MouseClicked

    private void webButton_LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_webButton_LoginActionPerformed
        String user = webTextField1_username.getText();
        String pass = webPasswordField1_password.getText();
        if (user.isEmpty() || pass.isEmpty()) { //Confirmation if ang fields naay sulod or wala
            getToolkit().beep();
            //JOptionPane.showMessageDialog(null, "Please fill all the fields", "Warning", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(null, "<html>"
                    + "<body style='color:red;font-size:10px'>"
                    + "<b>Please fill all the fields.</b>"
                    + "</body>"
                    + "</html>", "System Message", JOptionPane.ERROR_MESSAGE);
        } else {
            String SQL = "Select * from users_table where Username = ? and Password = ?";
            //String SQL = "SELECT * FROM admin join users_table where admin.user =? and admin.pass =?, users_table.Username =? and users_table.Password = ?";
            try {
                pst = (PreparedStatement) conn.prepareStatement(SQL);
                pst.setString(1, webTextField1_username.getText());
                pst.setString(2, webPasswordField1_password.getText());
                rs = pst.executeQuery();
                if (rs.next()) {
                    // ORS_Frame bmp = new ORS_Frame();
                    // ORS_Frame.jLabel2_mess.setText("Welcome: " + this.rs.getString("Privileges"));
                    // bmp.setVisible(true);
                    //jfield.setText("Welcome: "+this.rs.getString("Privileges"));
                    jfield.setText(this.rs.getString("Privileges"));
                    sfield.setText(this.rs.getString("user_status"));
                    if (jfield.getText().equals("Admin")) { //Validation if ang user is Admin or Normal User lang
                        LoginLogs();
                        Admin_Panel ap = new Admin_Panel();
                        //ap.setTitle("Welcome " + this.rs.getString("Privileges"));
                        Admin_Panel.jMenu3_admin.setText(this.rs.getString("Privileges") + " " + this.rs.getString("Firstname"));
                        //Admin_Panel.jLabel2_message.setText("Welcome Admin");
                        ap.setVisible(true);
                        Telegraph tele = new Telegraph("Message", "<html>"
                                + "<body style='color:red;font-size:13px'>"
                                + "<b>"
                                + "You have Successfully Login...</b>"
                                + "</body>"
                                + "</html>", TelegraphType.NOTIFICATION_DONE, WindowPosition.TOPRIGHT, 1500);
                        TelegraphQueue TQ = new TelegraphQueue();
                        TQ.add(tele);
                        dispose();
                    } else if (sfield.getText().equals("Inactive")) { //Confirmation if Active pa ang user or dili na
                        getToolkit().beep();
                        //JOptionPane.showMessageDialog(null, "Your Account is Deactivated by the Administrator", "Warning", JOptionPane.ERROR_MESSAGE);
                        JOptionPane.showMessageDialog(null, "<html>"
                                + "<body style='color:red;font-size:10px'>"
                                + "<b>Your Account is Deactivated by the Administrator.</b>"
                                + "</body>"
                                + "</html>", "System Message", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        LoginLogs();
                        ORS_BURS_FUNDS_Frame obff = new ORS_BURS_FUNDS_Frame();
                        ORS_BURS_FUNDS_Frame.jMenu1_user.setText(this.rs.getString("Privileges") + " " + this.rs.getString("Firstname"));
                        obff.setVisible(true);
                        webTextField1_username.setText("");
                        webPasswordField1_password.setText("");
                        //ORS_Frame ors = new ORS_Frame();
                        //ors.setTitle("Welcome " + this.rs.getString("Privileges") + " | | " + this.rs.getString("Firstname"));
                        //Budget_Main_Panel.jLabel2_mess.setText("Welcome: " + this.rs.getString("Privileges"));
                        //ors.setVisible(true);
                        Telegraph tele = new Telegraph("Message", "<html>"
                                + "<body style='color:red;font-size:13px'>"
                                + "<b>"
                                + "You have Successfully Login..."
                                + "</b>"
                                + "</body>"
                                + "</html>", TelegraphType.NOTIFICATION_DONE, WindowPosition.TOPRIGHT, 1500);
                        TelegraphQueue TQ = new TelegraphQueue();
                        TQ.add(tele);
                        dispose();
                    }

                } else {
                    getToolkit().beep();
                    //JOptionPane.showMessageDialog(null, "Invalid username and/or password", "Warning", JOptionPane.ERROR_MESSAGE);
                    JOptionPane.showMessageDialog(null, "<html>"
                            + "<body style='color:red;font-size:10px'>"
                            + "<b>Invalid Username and/or Password.</b>"
                            + "</body>"
                            + "</html>", "System Message", JOptionPane.ERROR_MESSAGE);

                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_webButton_LoginActionPerformed

    private void webTextField1_usernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_webTextField1_usernameKeyReleased
        webTextField1_username.getRegisteredKeyStrokes();
    }//GEN-LAST:event_webTextField1_usernameKeyReleased

    /* @Override
     public int hashCode() {
     int hash = 5;
     hash = 61 * hash + (this.conn != null ? this.conn.hashCode() : 0);
     return hash;
     }

     @Override
     public boolean equals(Object obj) {
     if (obj == null) {
     return false;
     }
     if (getClass() != obj.getClass()) {
     return false;
     }
     final System_Admin_and_User_Login other = (System_Admin_and_User_Login) obj;
     if (this.conn != other.conn && (this.conn == null || !this.conn.equals(other.conn))) {
     return false;
     }
     return true;
     }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {

            //com.jtattoo.plaf.acryl.AcrylLookAndFeel.setTheme("Red", "", "Student");
            //UIManager.setLookAndFeel("com.jtattoo.plaf.aero.AeroLookAndFeel");
            // new SyntheticaFXModena().init();
            //com.jtattoo.plaf.acryl.AcrylLookAndFeel.setTheme("Red", "Balas", "AEBSFMS");
            // UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
            UIManager.setLookAndFeel(new WebLookAndFeel());
            //UIManager.setLookAndFeel(new SyntheticaBlueMoonLookAndFeel());

        } catch (Exception e) {
            e.printStackTrace();

        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new System_Admin_and_User_Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3_ny_registered_sub;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JTextField jTextField1;
    private org.jdesktop.swingx.JXHyperlink jXHyperlink1_registration;
    private com.alee.laf.button.WebButton webButton_Login;
    private com.alee.laf.checkbox.WebCheckBox webCheckBox1;
    private com.alee.extended.time.WebClock webClock1;
    private com.alee.laf.text.WebPasswordField webPasswordField1_password;
    private com.alee.laf.text.WebTextField webTextField1_username;
    // End of variables declaration//GEN-END:variables
private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icons/tatelogo.png")));
    }

    private void datetime() {
        Timer timer = new Timer(1000, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                tickTock();
            }
        });
        timer.setRepeats(true);
        timer.setCoalesce(true);
        timer.start();
    }

    public void tickTock() {
        webClock1.setText(DateFormat.getDateTimeInstance().format(new Date()));

    }

    //Method para sa Logs every Login kung Admin or Normal User
    private void LoginLogs() {
        String SQL = "Insert into logs (Personel_Users, Activity, Date) values (?,?,now())";
        try {
            pst = (PreparedStatement) conn.prepareStatement(SQL);
            pst.setString(1, rs.getString("Privileges") + " [] [] Username: " + rs.getString("Username"));
            pst.setString(2, "Login");
            pst.execute();
        } catch (SQLException e) {
            e.getErrorCode();
        }
    }//end sa method LoginLogs
}
